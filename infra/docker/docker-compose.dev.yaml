version: "3.8"

name: demo-app-expenses

volumes:
  prometheus_data: {}
  grafana-data: {}
  loki-data: {}

services:
  # server:
  #   build:
  #     context: ../../server
  #     dockerfile: Dockerfile.dev
  #     target: dev
  #   volumes:
  #     - ../../server:/app
  #     - /app/node_modules
  #   ports:
  #     - "9980:9980"
  #   restart: unless-stopped
  #   environment:
  #     - PORT=9980
  #     - CERBOS_HOST=cerbos:3593
  #     - OTLP_PROTOCOL=grpc
  #     - OTLP_ENDPOINT=http://jaeger:4317
  #   depends_on:
  #     - cerbos

  # client:
  #   build:
  #     context: ../../client
  #     dockerfile: Dockerfile.dev
  #     target: dev
  #   volumes:
  #     - ../../client:/client
  #     - /app/node_modules
  #   ports:
  #     - "9990:9990"
  #   restart: unless-stopped
  #   environment:
  #     - VITE_API_HOST=http://localhost:9980/api
  #   depends_on:
  #     - server

  app:
    build:
      context: ../../
      dockerfile: infra/Dockerfile
    ports:
      - "9980:9980"
    restart: unless-stopped
    environment:
      - PORT=9980
      - CERBOS_HOST=cerbos:3593
      - OTLP_ENDPOINT=http://jaeger:4317/v1/traces
    depends_on:
      - cerbos

  cerbos:
    image: ghcr.io/cerbos/cerbos:dev
    ports:
      - "3592:3592"
      - "3593:3593"
    expose:
      - "3592"
      - "3593"
    environment:
      - CERBOS_NO_TELEMETRY=1
    volumes:
      - ../../cerbos/config-hub.yaml:/config.yaml
    restart: unless-stopped
    depends_on:
      - jaeger
    command: "server --log-level=debug --config=/config.yaml --set=tracing.otlp.collectorEndpoint=jaeger:4317"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    expose:
      - 9090

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana

  loki:
    image: grafana/loki:2.8.0
    ports:
      - "3100"
    volumes:
      # directory must be created first, with uid:gid 10001:10001
      - loki-data:/loki

  promtail:
    image: grafana/promtail:2.8.0
    volumes:
      # custom config will read logs from the containers of
      # this project
      - ./loki/promtail-config.yaml:/etc/promtail/config.yml
      # to read container labels and logs
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
